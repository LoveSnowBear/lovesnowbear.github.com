package sample.scene.upload.multiUpload2;import java.io.File;import java.util.ArrayList;import java.util.List;import javax.servlet.http.HttpServletRequest;import com.bstek.dorado.common.DoradoContext;import com.bstek.dorado.common.HttpDoradoContext;import com.bstek.dorado.data.Dataset;import com.bstek.dorado.data.ParameterSet;import com.bstek.dorado.view.DefaultViewModel;import com.bstek.dorado.view.ViewModel;/** * UploadViewModel 该类有三个作用： * <ol> * <li>在上传过程中，为客户端提供上传进度信息。(getUploadInfo方法。)</li> * <li>在上传成功后，为客户端提供上传结果。( doLoadData方法。)</li> * <li>客户端传递过来要移除的文件路径，服务器端删除该文件。(removeFile方法)</li> * </ol> */public class UploadDemoViewModel extends DefaultViewModel {	/**	 * 已经上传的文件列表。<br/> 一般情况下，这些信息是保存在数据库中的，为了方便演示，我们放置在一个static变量中。	 */	public static List uploadedFiles = new ArrayList();	/**	 * 取得上传中信息	 * 	 * @param parameters	 *            传入参数	 * @param outParameters	 *            传出参数	 * @throws Exception	 *             异常	 */	public void getUploadInfo(ParameterSet parameters,			ParameterSet outParameters) throws Exception {		DoradoContext context = DoradoContext.getContext();		UploadInfo uploadInfo = (UploadInfo) context.getAttribute(				DoradoContext.SESSION, "uploadInfo");		if (uploadInfo != null) {			outParameters.setLong("totalFileSize", uploadInfo					.getTotalFileSize());			outParameters.setLong("totalRead", uploadInfo.getTotalRead());			outParameters.setLong("elapsedTime", uploadInfo.getElapsedTime());			String status = uploadInfo.getStatus();			outParameters.setString("status", status);			outParameters.setInt("fileIndex", uploadInfo.getFileIndex());			if (status.equals("done")) {				context.setAttribute(DoradoContext.SESSION, "uploadInfo", null);			}		}	}	/**	 * 移除选择的文件。 客户端传递过来要移除的文件的文件路径，服务器端进行移除。	 */	public void removeFile(ParameterSet parameters, ParameterSet outParameters)			throws Exception {		String filePath = (String) parameters.getValue("filePath");		HttpDoradoContext context = (HttpDoradoContext) DoradoContext				.getContext();		HttpServletRequest request = context.getRequest();		String webappPath = request.getSession().getServletContext()				.getRealPath("/");		if (!filePath.equals("")) {			File file = new File(webappPath + filePath);			file.delete();			removeFileRecord(filePath);		}	}	/**	 * 移除uploadedFiles中的文件记录。	 * 	 * @param filePath	 *            文件路径	 */	private void removeFileRecord(String filePath) {		for (int i = 0, j = uploadedFiles.size(); i < j; i++) {			UploadResult result = (UploadResult)uploadedFiles.get(i);			if (result.getServerStoreDir().equals(filePath)) {				uploadedFiles.remove(i);				break;			}		}	}	/**	 * 为客户端提供文件上传结果。 因为每个文件对应一个上传结果，这些结果使用ParameterSet来表示不方便。 故采用dataset来表示。	 */	protected void doLoadData() throws Exception {		DoradoContext context = DoradoContext.getContext();		Dataset dsUploadResult = getDataset("dsUploadResult");		List list = (List) context.getAttribute(DoradoContext.SESSION,				"uploadResult");		dsUploadResult.fromDO(list);		context.setAttribute(DoradoContext.SESSION, "uploadResult", null);		if (this.getState() == ViewModel.STATE_VIEW) {			Dataset dsUploadedFiles = getDataset("dsUploadedFiles");			dsUploadedFiles.fromDO(UploadDemoViewModel.uploadedFiles);		}		super.doLoadData();	}}